# Python interpreter

cmake_minimum_required(VERSION 3.30)

message("Working on Python")

include(ExternalProject)

# -- Project --

project(python)

if (MSVC)
    set(PYTHON_BUILD_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/PCbuild/buildmin.bat -p ${CMAKE_GENERATOR_PLATFORM} -c $<CONFIG>)
    # amd64/win32 only for now :(
    if("${CMAKE_GENERATOR_PLATFORM}" STREQUAL "x64")
        set(PYTHON_PLATFORM "amd64")
    elseif("${CMAKE_GENERATOR_PLATFORM}" STREQUAL "win32")
        set(PYTHON_PLATFORM "win32")
    endif()
    set(PYTHON_LIBRARIES_DIR "${CMAKE_CURRENT_SOURCE_DIR}/artifacts/${PYTHON_PLATFORM}")
    set(PYTHON_INSTALL_COMMAND ${CMAKE_CURRENT_SOURCE_DIR}/PCbuild/cmake_install_step.bat ${CMAKE_COMMAND} ${PYTHON_LIBRARIES_DIR} ${CMAKE_CURRENT_SOURCE_DIR})
endif (MSVC)
    
ExternalProject_Add(
    python_compile
    BUILD_ALWAYS ${REBUILD_PYTHON}
    CONFIGURE_COMMAND ""
    SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR}
    BUILD_COMMAND "${PYTHON_BUILD_COMMAND}"
    INSTALL_COMMAND "${PYTHON_INSTALL_COMMAND}"
)

add_library(${PROJECT_NAME} INTERFACE)

add_library(python_lib SHARED IMPORTED)
add_dependencies(python_lib python_compile)
if(MSVC)
    set_property(TARGET python_lib PROPERTY IMPORTED_LOCATION_DEBUG ${PYTHON_LIBRARIES_DIR}/python3_d.dll)
    set_property(TARGET python_lib PROPERTY IMPORTED_LOCATION_RELEASE ${PYTHON_LIBRARIES_DIR}/python3.dll)
    set_property(TARGET python_lib PROPERTY IMPORTED_LOCATION_MINSIZEREL ${PYTHON_LIBRARIES_DIR}/python3.dll)
    set_property(TARGET python_lib PROPERTY IMPORTED_LOCATION_RELWITHDEBINFO ${PYTHON_LIBRARIES_DIR}/python3.dll)
    set_property(TARGET python_lib PROPERTY IMPORTED_IMPLIB_DEBUG ${PYTHON_LIBRARIES_DIR}/python3_d.lib)
    set_property(TARGET python_lib PROPERTY IMPORTED_IMPLIB_RELEASE ${PYTHON_LIBRARIES_DIR}/python3.lib)
    set_property(TARGET python_lib PROPERTY IMPORTED_IMPLIB_MINSIZEREL ${PYTHON_LIBRARIES_DIR}/python3.lib)
    set_property(TARGET python_lib PROPERTY IMPORTED_IMPLIB_RELWITHDEBINFO ${PYTHON_LIBRARIES_DIR}/python3.lib)
endif()

target_include_directories(${PROJECT_NAME} INTERFACE ${CMAKE_CURRENT_SOURCE_DIR}/Include)
target_link_directories(${PROJECT_NAME} INTERFACE ${PYTHON_LIBRARIES_DIR})
target_link_libraries(${PROJECT_NAME} INTERFACE python_lib)

install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Lib DESTINATION ${CMAKE_INSTALL_BINDIR})
install(DIRECTORY ${PYTHON_LIBRARIES_DIR}/ DESTINATION ${CMAKE_INSTALL_BINDIR} FILES_MATCHING PATTERN "*.exe")
install(DIRECTORY ${PYTHON_LIBRARIES_DIR}/ DESTINATION ${CMAKE_INSTALL_BINDIR} FILES_MATCHING PATTERN "*.dll")
install(DIRECTORY ${PYTHON_LIBRARIES_DIR}/ DESTINATION ${CMAKE_INSTALL_BINDIR} FILES_MATCHING PATTERN "*.pyd")
install(DIRECTORY ${PYTHON_LIBRARIES_DIR}/ DESTINATION ${CMAKE_INSTALL_BINDIR} FILES_MATCHING PATTERN "*.pdb")
install(DIRECTORY ${PYTHON_LIBRARIES_DIR}/ DESTINATION ${CMAKE_INSTALL_LIBDIR} FILES_MATCHING PATTERN "*.lib")
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/Include/ DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})

if(MSVC)
    set(PYTHON_INSTALL_LICENSEDIR licenses)
else()
    set(PYTHON_INSTALL_LICENSEDIR ${CMAKE_INSTALL_DATAROOTDIR}/licenses)
endif()
install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/LICENSE DESTINATION ${PYTHON_INSTALL_LICENSEDIR} RENAME Python-LICENSE.txt)
set(INSTALL_PIP_COMMAND "execute_process(COMMAND ${Python3_EXECUTABLE} \"${CMAKE_SOURCE_DIR}/scripts/ensurepip_starter.py\" \"${CMAKE_INSTALL_PREFIX}/${CMAKE_INSTALL_BINDIR}\")")
install(CODE ${INSTALL_PIP_COMMAND})